To get changed file content from last commit

git log -1 branch_namea --name-only #find out if file was changed
git ls-tree --full-name -r  d1ec77946d252944c85267125e195b096e19a569|grep fullpath_file_name|awk '{print $3}'#find out the file hash
git cat-file -p 75c626769188ead69909139745b7ce507a6a1a73  #list file content
OR all in one command
file='myfile';branch='master'
git log -1 --name-only $branch|grep $file&&git log --pretty=format:"%H" -1 $branch|xargs git ls-tree -r|grep $file|awk '{print $3}'|xargs git cat-file -p


check current working space difference from remote branch
git log origin/master..HEAD --name-only


git status
git stash  #Use git stash when you want to record the current state of the working directory and the index, but want to go back to a clean working directory.
       The command saves your local modifications away and reverts the working directory to match the HEAD commit.
The modifications stashed away by this command can be listed with git stash list, inspected with git stash show, and restored (potentially on top
       of a different commit) with git stash apply. 

customhooks中会设置 $GIT_DIR变量，如果要再非当前repo执行命令，需要unset $GIT_DIR

只下载单个branch或者tag的文件而不是整个仓库
git clone -b <tag_name> --single-branch <repo_url> [<dest_dir>] 

加上--depth 1 就可以只下载最新的文件，而不保留历史修改记录



Install gitlab-ce
curl -s https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash
yum install gitlab-ce-9.2.1-ce.0.el7.x86_64 -y

backup gitlab:
gitlab-rake gitlab:backup:create # can also add by cron job 0 2 * * * /opt/gitlab/bin/gitlab-rake gitlab:backup:create CRON=1

To restore a backup, you will also need to restore /etc/gitlab/gitlab-secrets.json (for Omnibus packages) or /home/git/gitlab/.secret (for installations from source). This file contains the database encryption key, CI secret variables, and secret variables used for two-factor authentication.you also need backup configuration file /etc/gitlab/gitlab.rb
# limit backup lifetime to 7 days - 604800 seconds
gitlab_rails['backup_keep_time'] = 604800

Restore from backup you can restore on other server which has same version gitlab installed:
gitlab-ctl reconfigure
/opt/gitlab/embedded/bin/runsvdir-start
gitlab-ctl start
#copy file to gitlab_rails['backup_path'] in your  /etc/gitlab/gitlab.rb file
cp 1493107454_2017_04_25_9.1.0_gitlab_backup.tar /var/opt/gitlab/backups/
gitlab-ctl stop unicorn
gitlab-ctl stop sidekiq
gitlab-ctl status
gitlab-rake gitlab:backup:restore BACKUP=1493107454_2017_04_25_9.1.0
gitlab-ctl restart
gitlab-rake gitlab:check SANITIZE=true

#monitoring logs
gitlab-ctl tail
