#!/bin/sh
#Configurations injected by install_server below....

EXEC=/usr/bin/redis-sentinel
CLIEXEC=/usr/bin/redis-cli
PIDFILE=/tmp/redis-sentinel.pid
CONF="/etc/redis/sentinel.conf"
REDISPORT="26379"
USER=nobody
###############
# SysV Init Information
# chkconfig: - 60 70
# description: redis-sentinel is the redis daemon.
### BEGIN INIT INFO
# Provides: redis-sentinel
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Should-Start: $syslog $named
# Should-Stop: $syslog $named
# Short-Description: start and stop redis_6379
# Description: Redis sentinel daemon
### END INIT INFO


function checkUser() {
  if [ `id -u` -ne 0 ]; then
    echo "You need root privileges to run this script"
    exit 4
  fi
}
checkUser

case "$1" in
    start)
        if [ -f $PIDFILE ]
        then
            echo "$PIDFILE exists, process is already running or crashed"
        else
            echo "Starting Redis sentinel server..."
            su -s /bin/sh $USER -c   "$EXEC $CONF"
        fi
        ;;
    stop)
        if [ ! -f $PIDFILE ]
        then
            echo "$PIDFILE does not exist, process is not running"
        else
            PID=$(cat $PIDFILE)
            echo "Stopping ..."
            $CLIEXEC -p $REDISPORT shutdown
            while [ -x /proc/${PID} ]
            do
                echo "Waiting for Redis sentinel to shutdown ..."
                sleep 1
            done
            echo "Redis sentinel stopped"
        fi
        ;;
    status)
        PID=$(cat $PIDFILE)
        if [ ! -x /proc/${PID} ]
        then
            echo 'Redis sentinel is not running'
        else
            echo "Redis sentinel is running ($PID)"
        fi
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    *)
        echo "Please use start, stop, restart or status as first argument"
        ;;
esac
