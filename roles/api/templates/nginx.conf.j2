[root@api1 ~]# cat /etc/nginx/nginx.conf
# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

#pid        /run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

        ##cache##
        proxy_connect_timeout 5;
        proxy_read_timeout 60;
        proxy_send_timeout 5;
        proxy_buffer_size 16k;
        proxy_buffers 4 64k;
        proxy_busy_buffers_size 128k;
        proxy_temp_file_write_size 128k;
        proxy_temp_path /home/nginx/temp_dir;
        proxy_cache_path /home/nginx/cache levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=30g;
        ##end##

        gzip    on;
        gzip_min_length   1k;
        gzip_buffers   4 8k;
        gzip_http_version  1.1;
        gzip_types   text/plain application/x-JavaScript text/css  application/xml;
        gzip_disable "MSIE [1-6]\.";

        upstream api_server {
         server 127.0.0.1:8080;
        }



    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    index   index.html index.htm;

    server {
        listen       80;
        server_name  {{ WWW_HOSTNAME }};
        rewrite ^(.*) https://$server_name$1 permanent;      

        location ~* ^.+\.(txt)$ {
            root         /usr/share/nginx/html;
            access_log   on;
            expires      24h;
        }
 
    }

    server {
        listen       443;
        server_name {{WWW_HOSTNAME}};
        root         /usr/share/nginx/html;
        ssl             on;
        ssl_certificate /etc/nginx/certs/__tokuapp_com.crt;
        ssl_certificate_key /etc/nginx/certs/__tokuapp_com.key;

        location / {
                proxy_pass http://api_server/api/;
                proxy_set_header   REMOTE-HOST $remote_addr;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Scheme  $scheme;
                proxy_set_header   X-Forwarded-Proto  $scheme;
                proxy_set_header   X-Forwarded-Host  $host;
                proxy_set_header   X-Forwarded-Port  443;
        }

        location /api/ {
                proxy_pass http://api_server/api/;
                proxy_set_header   REMOTE-HOST $remote_addr;
                proxy_set_header   Host $host;
                proxy_set_header   X-Real-IP $remote_addr;
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Scheme  $scheme;
                proxy_set_header   X-Forwarded-Proto  $scheme;
                proxy_set_header   X-Forwarded-Host  $host;
                proxy_set_header   X-Forwarded-Port  443;
        }

        location ~ .*\.(gif|jpg|png|htm|html|css|js|flv|ico|swf)(.*) {
                proxy_pass http://api_server;
                proxy_redirect off;
                proxy_cache cache_one;
                proxy_cache_valid 200 302 1h;
                proxy_cache_valid 301 1d;
                proxy_cache_valid any 1m;
                expires 30d;

                proxy_set_header   REMOTE-HOST $remote_addr;
                proxy_set_header   Host $host; 
                proxy_set_header   X-Real-IP $remote_addr; 
                proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Scheme  $scheme;
                proxy_set_header   X-Forwarded-Proto  $scheme;
                proxy_set_header   X-Forwarded-Host  $host;
                proxy_set_header   X-Forwarded-Port  443;
        }

    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;
    #    root         html;

    #    location / {
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;
    #    root         html;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #    }
    #}

}
