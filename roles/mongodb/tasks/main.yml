---
- name: copy mongo 3.4 serve rpm repository
  copy: src="mongodb.repo" dest="/etc/yum.repos.d/mongodb.repo"  
- name: install mongodb server
  yum: name={{item}} state=present
  with_items:
     - epel-release
     - mongodb-org
     - python2-pip
- name: install pymongo
  pip: name=pymongo state=latest executable=pip
- name: update mongodb configuration
  lineinfile: dest=/etc/mongod.conf  regexp='^(.*bindIp.) 127.0.0.1' line='\1 0.0.0.0' backrefs=yes
  notify: restart mongodb
- meta: flush_handlers
- name: add mongodb user for admin
  mongodb_user: database={{DBLOGIN.db}} name={{DBLOGIN.user}} password={{DBLOGIN.passwd}} roles='root' state=present
  retries: 3
  delay: 2
  ignore_errors: yes
- name: add mongodb user for new db
  mongodb_user: login_database={{DBLOGIN.db}} login_password={{DBLOGIN.passwd}}  login_user={{DBLOGIN.user}} database={{item}} name={{MONGO_new.user}} password={{MONGO_new.passwd}} roles={{MONGO_new.roles}} state=present
  with_items: "{{MONGO_new.db}}"
  when: MONGO_new is defined
  ignore_errors: yes
- name: add mongodb user for monitoring
  mongodb_user: login_database={{DBLOGIN.db}} login_password={{DBLOGIN.passwd}}  login_user={{DBLOGIN.user}} database=zabbix name=zabbix password=zabbix32112 roles=dbOwner state=present
  ignore_errors: yes
  when: MONMN is defined
- name: enable auth
  replace:
   path: /etc/mongod.conf
   regexp: '^#security:'
   replace: 'security: \n  authorization: enabled'
  notify: restart mongodb
- name: find master member
  shell:  /usr/bin/mongo --authenticationDatabase admin -u{{DBLOGIN.user}} -p{{DBLOGIN.passwd}} -eval "rs.status().members.find(r=>r.state===1).name"
  run_once: true
  register: mongo_master 
  ignore_errors: yes
- block:
  - name: enable internal auth
    replace:
      path: /etc/mongod.conf
      regexp: '^security: \n  authorization: enabled \n^$'
      replace: 'security: \n  authorization: enabled \n  keyFile: /etc/mongo.key'
    notify: restart mongodb
  - name: generate internal key file
    copy: content="{{mongo_key}}"  dest="/etc/mongo.key" mode=0600 owner=mongod
  - name: enable replication
    replace:
      path: /etc/mongod.conf
      regexp: '^#replication:'
      replace: 'replication: \n  replSetName: {{replication_name}}'
    notify: restart mongodb
  - meta: flush_handlers
  - name: Create the file to initialize the mongod replica set
    template: src=repset_init.j2 dest=/tmp/repset_init.js
  - name: Initialize the replication set
    shell: /usr/bin/mongo --authenticationDatabase admin -u{{DBLOGIN.user}} -p{{DBLOGIN.passwd}} /tmp/repset_init.js
    run_once: true
  when: replication_name is defined and mongo_master.failed == true
