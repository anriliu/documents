---
- hosts: localhost
  gather_facts: no
  connection: local
  vars:
#    ec2s:
#      - VIP: 172.18.91.139
#        ports:
#           - ["TCP","8000/8000",'0.0.0.0/0']
#           - ["TCP","1111/1111","0.0.0.0/0"]
#           - ["TCP","8081/8081","0.0.0.0/0"]
#           - ["ALL","-1/-1","192.168.128.0/24"]
#      - VIP: 172.18.91.153
#        ports:
#           - ["ALL","-1/-1","192.168.168.0/24"]
    sgnames:
       - name: yp-uat 
         rules:
           - ["ALL","-1/-1","192.168.128.0/24"]
         policy: accept
         nic_type: intranet
         state: present 
  tasks:    
#   - name: Find all instances in the specified region
#     alicloud_instance_facts:
#       instance_names: "{{item}}"
#     with_items:
#       - hzx-prod-3
#       - hzx-prod-1
#     register: all_instances
#   - name: "quering current security group  rule"
#     alicloud_security_group:
#       state: list
#       group_id: "{{item.instances[0].group_ids.security_group_id[0]}}"
#     with_items: "{{all_instances.results}}"
   - block:
     - name: install alicli compannents
       pip: 
        name:
        - aliyuncli
        - aliyun-python-sdk-rds
     - name: install jq
       yum: name=jq enablerepo=epel
     - name: Query current vpc secrity group by vpc ip
       shell: 'aliyuncli ecs DescribeInstances --PageSize 100|jq ".Instances.Instance[]|{id: .InstanceId,sg: .SecurityGroupIds.SecurityGroupId[],vip: .VpcAttributes.PrivateIpAddress.IpAddress[]}|select(.vip == \"{{item.VIP}}\")|.sg"'
       register: security_groups
       with_items: "{{ec2s}}"
       loop_control:
         label: "{{item.VIP}}"
     - name: authorize security grp
       shell: 'aliyuncli ecs AuthorizeSecurityGroup --IpProtocol {{item.1[0]}} --PortRange {{item.1[1]}}  --SecurityGroupId {{item.0.stdout[0:25]}}  --SourceCidrIp  {{item.1[2]}}'
       with_subelements: 
         - "{{security_groups.results}}"
         - item.ports
       loop_control:
         label: "{{item.0.item.VIP}} {{item.0.stdout}} {{item.1}}"


#     - name: list current secrity group rules
#       shell: 'aliyuncli ecs DescribeSecurityGroupAttribute --SecurityGroupId {{item.stdout}} --Direction ingress  --filter Permissions.Permission[*].[IpProtocol,PortRange,SourceCidrIp]  --output text'
#       with_items: "{{security_groups.results}}"
#       register: sg_rules
#       loop_control:
#         label: "{{item.stdout}}"
#     - name: print rules
#       debug: var=item.stdout_lines|join(",")|regex_replace('\t',' ')
#       with_items: "{{sg_rules.results}}"
#       loop_control:
#          label: "{{item.stdout_lines}}"
     when: ec2s is defined
   - block:
     - name: authorize  rule to named security group
       alicloud_security_group:
         group_name: 'AliyunSG'
         alicloud_region: cn-shenzhen 
         rules:
          - ip_protocol: "{{item.1[0]}}"
            port_range: "{{item.1[1]}}"
            source_cidr_ip: "{{item.1[2]}}"
            policy: "{{item.0.policy}}"
            nic_type: "{{item.0.nic_type}}"
       with_subelements: 
           - "{{sgnames}}"
           - rules 
     when: sgnames is defined
